include required(classpath("application"))

google {
    application-name = "cromwell"

    auths = [
        {
            name = "application-default"
            scheme = "application_default"
        }
    ]
}

engine {
    filesystems {
        gcs {
            auth = "application-default"
            project = "<your-google-project>"
        }
    }
}

backend {
    default = SGE

    providers {
        JES {
            actor-factory = "cromwell.backend.google.pipelines.v2alpha1.PipelinesApiLifecycleActorFactory"
            
            config {
                // Google project
                project = "<your-google-project>"

                // Base bucket for workflow executions
                root = "gs://<your-bucket>/cromwell-execution"

                // Polling for completion backs-off gradually for slower-running jobs.
                // This is the maximum polling interval (in seconds):
                maximum-polling-interval = 600

                // Optional Dockerhub Credentials. Can be used to access private docker images.
                dockerhub {
                    // account = ""
                    // token = ""
                }

                genomics {
                    // A reference to an auth defined in the `google` stanza at the top.  This auth is used to create
                    // Pipelines and manipulate auth JSONs.
                    auth = "application-default"
                    // Endpoint for APIs, no reason to change this unless directed by Google.
                    endpoint-url = "https://genomics.googleapis.com/"
                    // This allows you to use an alternative service account to launch jobs, by default uses default service account
                    compute-service-account = "default"

                    // Pipelines v2 only: specify the number of times localization and delocalization operations should be attempted
                    // There is no logic to determine if the error was transient or not, everything is retried upon failure
                    // Defaults to 3
                    localization-attempts = 3
                }

                filesystems {
                    gcs {
                        // A reference to a potentially different auth for manipulating files via engine functions.
                        auth = "application-default"
                        project = "<your-google-project>"
                    }
                }
            }
        }

        SGE {
            actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"

            config {
                concurrent-job-limit = 100
                run-in-background = false

                runtime-attributes = """
                    Int? cpu
                    Float? memory_gb
                    String? output_filename
                    String? error_filename
                    String? sge_queue
                    String? sge_project
                    String? docker
                """

                submit-docker = """
                    qsub \
                    -terse \
                    -V \
                    -b y \
                    -N ${job_name} \
                    -cwd \
                    -o ${default="stdout.o" output_filename + ".o"} \
                    -e ${default="stderr.e" error_filename + ".e"} \
                    -l os=RedHat7 \
                    -pe smp ${default=1 cpu} \
                    -binding linear:${default=1 cpu} \
                    ${"-l h_vmem=" + memory_gb + "G"} \
                    singularity -q exec --bind ${cwd}:${docker_cwd} docker://${docker} ${job_shell} ${script}
                """

                job-id-regex = "(\\d+)"
                kill = "qdel ${job_id}"
                check-alive = "qstat -j ${job_id}"
            }
        }
    }
}
